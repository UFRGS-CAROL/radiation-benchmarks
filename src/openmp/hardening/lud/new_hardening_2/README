LUD OpenMP

* How to compile
  - Intel Xeon Phi (icc native compilation):
    $ make intel
  - General X86 (gcc):
    $ make general

Compilation should generate 5 binaries:
  - lud_gen: used to generate the input and gold output. Gold will be used to check if the execution generates a correct output.
  - lud_check: this binary will be used during radiation test, it will execute the benchmark kernel several times
  - lud_timing: this binary is used only for testing purposes, it will measure the time spent in every part of the benchmark. This binary will not record any log information
  - lud_err_inj: this binary is used only for testing purposes, it will change the input value to check if the gold verification is working. This binary will also enter into an infinite loop to test the setup that needs to kill hanging benchmarks.



* How to generate input data and gold output
  - gold output
    $ .//lud_gen [-s matrix_size] [-n no. of threads]
        - no. of threads: how many thread the openmp should create
        - matrix size: one side of the square matrix (1024, 2048, 4096, ...)


* How to run a test

Before running the benchmark, the script radiation-benchmarks/scripts/install.py should be executed. This script will create the folder to store the log files and create the conf file in /etc/radiation-benchmark.conf

    $ ./lud_check [-n no. of threads] [-s matrix_size] [-i input_file] [-g gold_file] [-l #iterations]
        - no. of threads: how many thread the openmp should create
        - matrix size: one side of the square matrix (1024, 2048, 4096, ...)
        - input_file: location of the input file with the matrices
        - gold_file: location of the the gold output file
        - #iterations: how many times the benchmark kernel should be executed, usually 100000 is enough for the radiation test (it will crash before reaching this number)



* Configuration used for Xeon Phi 3120A
  - input and gold generated
    $ ./lud_gen -s 1024 -n 228
    $ ./lud_gen -s 2048 -n 228
    $ ./lud_gen -s 4096 -n 228
  - configurations executed
    $ ./lud_check -s 1024 -n 228 -i input_1024_th_228 -g gold_1024_th_228 -l 1000000
    $ ./lud_check -s 2048 -n 228 -i input_2048_th_228 -g gold_2048_th_228 -l 1000000
    $ ./lud_check -s 4096 -n 228 -i input_4096_th_228 -g gold_4096_th_228 -l 1000000

